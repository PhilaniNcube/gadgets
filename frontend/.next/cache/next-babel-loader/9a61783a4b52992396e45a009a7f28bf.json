{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\capegadgets\\\\frontend\\\\components\\\\Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport Product from './Product';\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allProducts(first: $first, skip: $skip) {\n      id\n      name\n      price\n      category\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nconst ProductsListSyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListSyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr 1fr;gap:60px;@media screen and (max-width:1090px){grid-template-columns:1fr 1fr;}\"]);\n\nconst Products = ({\n  page\n}) => {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListSyles, {\n      children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Products;","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/capegadgets/frontend/components/Products.js"],"names":["useQuery","gql","React","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductsListSyles","div","Products","page","data","error","loading","variables","skip","first","message","allProducts","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAGL,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAkBP,MAAMM,iBAAiB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,oIAAvB;;AAUA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2Bb,QAAQ,CAACM,kBAAD,EAAqB;AAC5DQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEL,IAAI,GAAGN,OAAP,GAAiBA,OADd;AAETY,MAAAA,KAAK,EAAEZ;AAFE;AADiD,GAArB,CAAzC;AAOA,MAAIS,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,2BACE,QAAC,iBAAD;AAAA,gBACGN,IAAI,CAACO,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBACpB,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB,SAAgCA,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApBD;;AAsBA,eAAeZ,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { perPage } from '../config';\r\nimport Product from './Product';\r\n\r\nexport const ALL_PRODUCTS_QUERY = gql`\r\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\r\n    allProducts(first: $first, skip: $skip) {\r\n      id\r\n      name\r\n      price\r\n      category\r\n      description\r\n      photo {\r\n        id\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProductsListSyles = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 60px;\r\n\r\n  @media screen and (max-width: 1090px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`;\r\n\r\nconst Products = ({ page }) => {\r\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\r\n    variables: {\r\n      skip: page * perPage - perPage,\r\n      first: perPage,\r\n    },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <ProductsListSyles>\r\n        {data.allProducts.map((product) => (\r\n          <Product product={product} key={product.id} />\r\n        ))}\r\n      </ProductsListSyles>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}