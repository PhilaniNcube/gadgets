{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/Philani/Desktop/graph/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id })\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* eslint-disable react/prop-types */\nimport gql from 'graphql-tag';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\n\nvar UpdateProduct = function UpdateProduct(_ref) {\n  var id = _ref.id;\n  return (\n    /*#__PURE__*/\n    // 1. We need to get the existing product\n    // 2. We need to get the mutation to update the product\n    // 3. We need the form to handle the updat\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Update \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }, _this)\n  );\n};\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/sick-fits/frontend/components/UpdateProduct.js"],"names":["gql","SINGLE_PRODUCT_QUERY","UpdateProduct","id"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;;AAMA,IAAME,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA;AAAA;AACpB;AAEA;AAEA;AACA;AAAA,6BACE;AAAA,8BAAWA,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANoB;AAAA,CAAtB;;KAAMD,a;AAUN,eAAeA,aAAf","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport gql from 'graphql-tag';\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\r\n    Product(where: { id: $id })\r\n  }\r\n`;\r\n\r\nconst UpdateProduct = ({ id }) => (\r\n  // 1. We need to get the existing product\r\n\r\n  // 2. We need to get the mutation to update the product\r\n\r\n  // 3. We need the form to handle the updat\r\n  <div>\r\n    <p>Update {id}</p>\r\n  </div>\r\n);\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}