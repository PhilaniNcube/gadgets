{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\capegadgets\\\\frontend\\\\lib\\\\cartState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  var _useState = useState(true),\n      cartOpen = _useState[0],\n      setCartOpen = _useState[1];\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen,\n      setCartOpen: setCartOpen,\n      toggleCart: toggleCart,\n      closeCart: closeCart,\n      openCart: openCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\n_s(CartStateProvider, \"4Qu9cPyVTv4vrTzPHQmc7wacYDc=\");\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s2();\n\n  // we use a consumer to access local state\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s2(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/capegadgets/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,IAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,IAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACvC;AADuC,kBAGPL,QAAQ,CAAC,IAAD,CAHD;AAAA,MAGhCM,QAHgC;AAAA,MAGtBC,WAHsB;;AAKvC,WAASC,UAAT,GAAsB;AACpBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASG,SAAT,GAAqB;AACnBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,WAASG,QAAT,GAAoB;AAClBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,WAAW,EAAXA,WAAZ;AAAyBC,MAAAA,UAAU,EAAVA,UAAzB;AAAqCC,MAAAA,SAAS,EAATA,SAArC;AAAgDC,MAAAA,QAAQ,EAARA;AAAhD,KADT;AAAA,cAGGL;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;;GA1BSD,iB;;KAAAA,iB;;AA4BT,SAASO,OAAT,GAAmB;AAAA;;AACjB;AACA,MAAMC,GAAG,GAAGb,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACD;;IAJQD,O;;AAMT,SAASP,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nfunction CartStateProvider({ children }) {\r\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\r\n\r\n  const [cartOpen, setCartOpen] = useState(true);\r\n\r\n  function toggleCart() {\r\n    setCartOpen(!cartOpen);\r\n  }\r\n\r\n  function closeCart() {\r\n    setCartOpen(false);\r\n  }\r\n\r\n  function openCart() {\r\n    setCartOpen(true);\r\n  }\r\n\r\n  return (\r\n    <LocalStateProvider\r\n      value={{ cartOpen, setCartOpen, toggleCart, closeCart, openCart }}\r\n    >\r\n      {children}\r\n    </LocalStateProvider>\r\n  );\r\n}\r\n\r\n// make a custom hook for accessing the cart local state\r\n\r\nfunction useCart() {\r\n  // we use a consumer to access local state\r\n  const all = useContext(LocalStateContext);\r\n  return all;\r\n}\r\n\r\nexport { CartStateProvider, useCart };\r\n"]},"metadata":{},"sourceType":"module"}