{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\capegadgets\\\\frontend\\\\components\\\\Checkout.js\";\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nvar CheckOutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckOutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;display:grid;grid-gap:10px;color:black;\"]); // eslint-disable-next-line no-undef\n\n_c = CheckOutFormStyles;\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction Checkout() {\n  function handleSubmit(e) {\n    // 1. Stop the form from submiting and turn the loader on\n    e.preventDefault(); // 2. Start the page transition\n    // 3. Create the payment method from stripe (Token comes back here if successful)\n    // 4. Handle any errors from stripe\n    // 5. Send the token from step 3 to our keystone server via custom mutation\n    // 6. Change the page to view the order\n\n    console.log('we have to do some work');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckOutFormStyles, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n        children: \"Check Out Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckOutFormStyles\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/capegadgets/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","SickButton","CheckOutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","Checkout","handleSubmit","e","preventDefault","console","log"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,yBAAtC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,IAAMC,kBAAkB,GAAGL,MAAM,CAACM,IAAV;AAAA;AAAA;AAAA,6IAAxB,C,CASA;;KATMD,kB;AAUN,IAAME,SAAS,GAAGN,UAAU,CAACO,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,QAAT,GAAoB;AAClB,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFuB,CAIvB;AAEA;AAEA;AAEA;AAEA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AAED,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAET,SAAlB;AAAA,2BACE,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEK,YAA9B;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;MA1BQD,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import styled from 'styled-components';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { CardElement, Elements } from '@stripe/react-stripe-js';\r\nimport SickButton from './styles/SickButton';\r\n\r\nconst CheckOutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  border: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  color: black;\r\n`;\r\n\r\n// eslint-disable-next-line no-undef\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction Checkout() {\r\n  function handleSubmit(e) {\r\n    // 1. Stop the form from submiting and turn the loader on\r\n    e.preventDefault();\r\n\r\n    // 2. Start the page transition\r\n\r\n    // 3. Create the payment method from stripe (Token comes back here if successful)\r\n\r\n    // 4. Handle any errors from stripe\r\n\r\n    // 5. Send the token from step 3 to our keystone server via custom mutation\r\n\r\n    // 6. Change the page to view the order\r\n    console.log('we have to do some work');\r\n  }\r\n\r\n  return (\r\n    <Elements stripe={stripeLib}>\r\n      <CheckOutFormStyles onSubmit={handleSubmit}>\r\n        <CardElement />\r\n\r\n        <SickButton>Check Out Now</SickButton>\r\n      </CheckOutFormStyles>\r\n    </Elements>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}