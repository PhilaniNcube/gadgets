{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\capegadgets\\\\frontend\\\\components\\\\RequestReset.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage';\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }\n`;\nexport default function RequestReset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: ''\n  });\n  const [signup, {\n    data,\n    loading,\n    error\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // refetch the currently logged in user\n    // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // stop the form from submiting\n\n    const res = await signup().catch(console.error);\n    console.log(res);\n    console.log({\n      loading,\n      data,\n      error\n    });\n    resetForm(); // send the email and password to graphql API\n  }; //   const error =\n  //     data?.authenticateUserWithPassword.__typename ===\n  //     'UserAuthenticationWithPasswordFailure'\n  //       ? data?.authenticateUserWithPassword\n  //       : undefined;\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Signed Up with \", data.createUser.email, \" - Please go ahead and sign in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/capegadgets/frontend/components/RequestReset.js"],"names":["useMutation","gql","useForm","Form","CURRENT_USER_QUERY","Error","REQUEST_RESET_MUTATION","RequestReset","inputs","handleChange","resetForm","email","signup","data","loading","error","variables","handleSubmit","e","preventDefault","res","catch","console","log","createUser"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,sBAAsB,GAAGL,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASM,YAAT,GAAwB;AACrC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCR,OAAO,CAAC;AAClDS,IAAAA,KAAK,EAAE;AAD2C,GAAD,CAAnD;AAIA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAT,IAAqCf,WAAW,CACpDM,sBADoD,EAEpD;AACEU,IAAAA,SAAS,EAAER,MADb,CAEE;AACA;;AAHF,GAFoD,CAAtD;;AASA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF,GADgC,CACZ;;AAEpB,UAAMC,GAAG,GAAG,MAAMR,MAAM,GAAGS,KAAT,CAAeC,OAAO,CAACP,KAAvB,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAET,MAAAA,OAAF;AAAWD,MAAAA,IAAX;AAAiBE,MAAAA;AAAjB,KAAZ;AAEAL,IAAAA,SAAS,GAPuB,CAQhC;AACD,GATD,CAdqC,CAyBrC;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEO,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,UAAN,kBACC;AAAA,sCACkBX,IAAI,CAACW,UAAL,CAAgBb,KADlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,0BAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEH,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport Form from './styles/Form';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport Error from './ErrorMessage';\r\n\r\nconst REQUEST_RESET_MUTATION = gql`\r\n  mutation REQUEST_RESET_MUTATION($email: String!) {\r\n    sendUserPasswordResetLink(email: $email) {\r\n      code\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function RequestReset() {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: '',\r\n  });\r\n\r\n  const [signup, { data, loading, error }] = useMutation(\r\n    REQUEST_RESET_MUTATION,\r\n    {\r\n      variables: inputs,\r\n      // refetch the currently logged in user\r\n      // refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n    }\r\n  );\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // stop the form from submiting\r\n\r\n    const res = await signup().catch(console.error);\r\n    console.log(res);\r\n    console.log({ loading, data, error });\r\n\r\n    resetForm();\r\n    // send the email and password to graphql API\r\n  };\r\n\r\n  //   const error =\r\n  //     data?.authenticateUserWithPassword.__typename ===\r\n  //     'UserAuthenticationWithPasswordFailure'\r\n  //       ? data?.authenticateUserWithPassword\r\n  //       : undefined;\r\n\r\n  return (\r\n    <Form method=\"POST\" onSubmit={handleSubmit}>\r\n      <h2>Reset Password </h2>\r\n      <Error error={error} />\r\n      <fieldset>\r\n        {data?.createUser && (\r\n          <p>\r\n            Signed Up with {data.createUser.email} - Please go ahead and sign in\r\n          </p>\r\n        )}\r\n\r\n        <label htmlFor=\"email\">\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter Your Email Address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Request Reset</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}