{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\capegadgets\\\\frontend\\\\lib\\\\cartState.js\";\nimport { createContext, useContext, useState } from 'react';\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\nfunction useCart() {\n  // we use a consumer to access local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/capegadgets/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,MAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACvC;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAA3B;AAAA,eAA0CD,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;;;AAEA,SAASG,OAAT,GAAmB;AACjB;AACA,QAAMC,GAAG,GAAGV,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOQ,GAAP;AACD;;AAED,SAASL,iBAAT,EAA4BI,OAA5B","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nfunction CartStateProvider({ children }) {\r\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\r\n\r\n  const [cartOpen, setCartOpen] = useState(false);\r\n  return (\r\n    <LocalStateProvider value={{ cartOpen }}>{children} </LocalStateProvider>\r\n  );\r\n}\r\n\r\n// make a custom hook for accessing the cart local state\r\n\r\nfunction useCart() {\r\n  // we use a consumer to access local state\r\n  const all = useContext(LocalStateContext);\r\n  return all;\r\n}\r\n\r\nexport { CartStateProvider, useCart };\r\n"]},"metadata":{},"sourceType":"module"}