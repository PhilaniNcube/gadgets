{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Philani/Desktop/graph/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Philani/Desktop/graph/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Philani/Desktop/graph/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Philani/Desktop/graph/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: { name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* eslint-disable react/prop-types */\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\n\nvar UpdateProduct = function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  // 1. We need to get the existing product\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // 2. We need to get the mutation to update the product\n\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading; // 2.5 Create some state for the form inputs:\n\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Product),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  console.log(inputs);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, _this); // 3. We need the form to handle the updates\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateProduct({\n                  variables: {\n                    id: id,\n                    data: {\n                      name: inputs.name,\n                      description: inputs.description,\n                      price: inputs.price\n                    }\n                  }\n                })[\"catch\"](console.error);\n\n              case 3:\n                res = _context.sent;\n                console.log(res); // TODO: Handle Submit\n                // console.log(inputs);\n                // Submit the inputfields to the backend:\n                // const res = await createProduct();\n                // clearForm();\n                // // Got to the product page\n                // Router.push({ pathname: `/products/${res.data.createProduct.id}` });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateProduct, \"5TghAqGZay5B0gGDehw9fdQkAMk=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/sick-fits/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","updateProduct","updateData","updateError","updateLoading","Product","inputs","handleChange","clearForm","resetForm","console","log","e","preventDefault","name","description","price","res"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport DisplayError from './ErrorMessage';\r\nimport Form from './styles/Form';\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n  mutation UPDATE_PRODUCT_MUTATION(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: { name: $name, description: $description, price: $price }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst UpdateProduct = ({ id }) => {\r\n  // 1. We need to get the existing product\r\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  // 2. We need to get the mutation to update the product\r\n  const [\r\n    updateProduct,\r\n    { data: updateData, error: updateError, loading: updateLoading },\r\n  ] = useMutation(UPDATE_PRODUCT_MUTATION);\r\n  // 2.5 Create some state for the form inputs:\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\r\n  console.log(inputs);\r\n  if (loading) return <p>loading...</p>;\r\n  // 3. We need the form to handle the updates\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const res = await updateProduct({\r\n          variables: {\r\n            id,\r\n            data: {\r\n              name: inputs.name,\r\n              description: inputs.description,\r\n              price: inputs.price,\r\n            },\r\n          },\r\n        }).catch(console.error);\r\n        console.log(res);\r\n\r\n        // TODO: Handle Submit\r\n\r\n        // console.log(inputs);\r\n        // Submit the inputfields to the backend:\r\n        // const res = await createProduct();\r\n        // clearForm();\r\n        // // Got to the product page\r\n        // Router.push({ pathname: `/products/${res.data.createProduct.id}` });\r\n      }}\r\n    >\r\n      <DisplayError error={error || updateError} />\r\n      <fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"price\">\r\n          Price\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            placeholder=\"price\"\r\n            value={inputs.price}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"description\">\r\n          Description\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            placeholder=\"Description\"\r\n            value={inputs.description}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">+ Update Product</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n};\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}