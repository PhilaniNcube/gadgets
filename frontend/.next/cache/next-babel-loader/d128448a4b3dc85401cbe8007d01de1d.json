{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Philani/Desktop/graph/capegadgets/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Philani/Desktop/graph/capegadgets/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Philani/Desktop/graph/capegadgets/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Philani/Desktop/graph/capegadgets/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Philani\\\\Desktop\\\\graph\\\\capegadgets\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ORDER_MUTATION($token: String!) {\\n    checkout(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport SickButton from './styles/SickButton';\nimport { useCart } from '../lib/cartState';\nvar CheckOutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckOutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;display:grid;grid-gap:10px;color:black;\"]);\n_c = CheckOutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject()); // eslint-disable-next-line no-undef\n\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useCart = useCart(),\n      closeCart = _useCart.closeCart;\n\n  var router = useRouter();\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 1. Stop the form from submiting and turn the loader on\n              e.preventDefault();\n              console.log('we have to do some work');\n              setLoading(true); // 2. Start the page transition\n\n              nProgress.start(); // 3. Create the payment method from stripe (Token comes back here if successful)\n\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); // 4. Handle any errors from stripe\n\n              if (!error) {\n                _context.next = 14;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 16:\n              order = _context.sent;\n              console.log('finished with the order');\n              console.log(order); // 6. Change the page to view the order\n\n              router.push({\n                pathname: '/order',\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); // 7. Close the cart\n\n              closeCart(); // 8. Turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckOutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"FcHf9z1U9MwKE3Z1z8CBMZIDVYk=\", false, function () {\n  return [useCart, useRouter, useStripe, useElements, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport default Checkout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckOutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Philani/Desktop/graph/capegadgets/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","useState","nProgress","gql","useMutation","useRouter","SickButton","useCart","CheckOutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","closeCart","router","stripe","elements","checkout","graphQLError","handleSubmit","e","preventDefault","console","log","start","createPaymentMethod","type","card","getElement","paymentMethod","done","variables","token","id","order","push","pathname","query","data","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport { useState } from 'react';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { useRouter } from 'next/router';\r\nimport SickButton from './styles/SickButton';\r\nimport { useCart } from '../lib/cartState';\r\n\r\nconst CheckOutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  border: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  color: black;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n  mutation CREATE_ORDER_MUTATION($token: String!) {\r\n    checkout(token: $token) {\r\n      id\r\n      charge\r\n      total\r\n      items {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// eslint-disable-next-line no-undef\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { closeCart } = useCart();\r\n  const router = useRouter();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [checkout, { error: graphQLError }] = useMutation(\r\n    CREATE_ORDER_MUTATION\r\n  );\r\n\r\n  async function handleSubmit(e) {\r\n    // 1. Stop the form from submiting and turn the loader on\r\n    e.preventDefault();\r\n    console.log('we have to do some work');\r\n    setLoading(true);\r\n\r\n    // 2. Start the page transition\r\n    nProgress.start();\r\n\r\n    // 3. Create the payment method from stripe (Token comes back here if successful)\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    console.log(paymentMethod);\r\n\r\n    // 4. Handle any errors from stripe\r\n    if (error) {\r\n      setError(error);\r\n      nProgress.done();\r\n      return; // stops the checkout process from happening\r\n    }\r\n\r\n    // 5. Send the token from step 3 to our keystone server via custom mutation\r\n    const order = await checkout({\r\n      variables: {\r\n        token: paymentMethod.id,\r\n      },\r\n    });\r\n    console.log('finished with the order');\r\n    console.log(order);\r\n\r\n    // 6. Change the page to view the order\r\n    router.push({\r\n      pathname: '/order',\r\n      query: { id: order.data.checkout.id },\r\n    });\r\n\r\n    // 7. Close the cart\r\n    closeCart();\r\n\r\n    // 8. Turn the loader off\r\n    setLoading(false);\r\n    nProgress.done();\r\n  }\r\n\r\n  return (\r\n    <CheckOutFormStyles onSubmit={handleSubmit}>\r\n      {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n      {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\r\n      <CardElement />\r\n\r\n      <SickButton>Check Out Now</SickButton>\r\n    </CheckOutFormStyles>\r\n  );\r\n}\r\n\r\nfunction Checkout() {\r\n  return (\r\n    <Elements stripe={stripeLib}>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}